{
  "$id" : "https://github.com/dodona-edu/universal-judge/blob/master/tested/dsl/schema.yaml",
  "$schema" : "https://json-schema.org/draft/2019-09/schema",
  "title" : "DSL Schema",
  "description" : "DSL test suite for TESTed",
  "oneOf" : [
    {
      "$ref" : "#/$defs/_rootObject"
    },
    {
      "$ref" : "#/$defs/unit"
    },
    {
      "$ref" : "#/$defs/_unitList"
    }
  ],
  "$defs" : {
    "_unitList" : {
      "type" : "array",
      "minItems" : 1,
      "items" : {
        "$ref" : "#/$defs/unit"
      }
    },
    "_testcaseList" : {
      "type" : "array",
      "minItems" : 1,
      "items" : {
        "$ref" : "#/$defs/testcase"
      }
    },
    "_scriptList" : {
      "type" : "array",
      "minItems" : 1,
      "items" : {
        "$ref" : "#/$defs/script"
      }
    },
    "_rootObject" : {
      "type" : "object",
      "unevaluatedProperties" : false,
      "properties" : {
        "config" : {
          "$ref" : "#/$defs/globalConfig",
          "description" : "Configuration applicable to the whole test suite."
        },
        "namespace" : {
          "type" : "string",
          "description" : "Namespace of the submitted solution, in `snake_case`"
        },
        "tabs" : {
          "$ref" : "#/$defs/_unitList"
        },
        "units" : {
          "$ref" : "#/$defs/_unitList"
        },
        "language" : {
          "description" : "Indicate that all code is in a specific language.",
          "oneOf" : [
            {
              "$ref" : "#/$defs/supportedLanguage"
            },
            {
              "const" : "tested"
            }
          ],
          "default" : "tested"
        }
      },
      "oneOf" : [
        {
          "required" : [
            "tabs"
          ]
        },
        {
          "required" : [
            "units"
          ]
        }
      ]
    },
    "unit" : {
      "type" : "object",
      "unevaluatedProperties" : false,
      "properties" : {
        "config" : {
          "$ref" : "#/$defs/globalConfig",
          "description" : "Configuration applicable to this unit/tab"
        },
        "hidden" : {
          "type" : "boolean",
          "description" : "Defines if the unit/tab is hidden for the student or not"
        },
        "unit" : {
          "type" : "string",
          "description" : "The name of this unit."
        },
        "tab" : {
          "type" : "string",
          "description" : "The name of this tab."
        },
        "cases" : {
          "$ref" : "#/$defs/_testcaseList"
        },
        "contexts" : {
          "$ref" : "#/$defs/_testcaseList"
        },
        "scripts" : {
          "$ref" : "#/$defs/_scriptList"
        },
        "testcases" : {
          "$ref" : "#/$defs/_scriptList"
        }
      },
      "oneOf" : [
        {
          "required" : [
            "tab"
          ],
          "oneOf" : [
            {
              "required" : [
                "contexts"
              ]
            },
            {
              "required" : [
                "testcases"
              ]
            }
          ]
        },
        {
          "required" : [
            "unit"
          ],
          "oneOf" : [
            {
              "required" : [
                "cases"
              ]
            },
            {
              "required" : [
                "scripts"
              ]
            }
          ]
        }
      ]
    },
    "testcase" : {
      "type" : "object",
      "unevaluatedProperties" : false,
      "properties" : {
        "config" : {
          "$ref" : "#/$defs/globalConfig",
          "description" : "Configuration settings at context level"
        },
        "context" : {
          "type" : "string",
          "description" : "Description of this context."
        },
        "testcases" : {
          "$ref" : "#/$defs/_scriptList"
        },
        "script" : {
          "$ref" : "#/$defs/_scriptList"
        }
      },
      "oneOf" : [
        {
          "required" : [
            "testcases"
          ]
        },
        {
          "required" : [
            "script"
          ]
        }
      ]
    },
    "script" : {
      "type" : "object",
      "unevaluatedProperties" : false,
      "description" : "An individual test for a statement or expression",
      "properties" : {
        "stdin" : {
          "description" : "Stdin for this context",
          "type" : [
            "string",
            "number",
            "integer",
            "boolean"
          ]
        },
        "arguments" : {
          "type" : "array",
          "description" : "Array of program call arguments",
          "items" : {
            "type" : [
              "string",
              "number",
              "integer",
              "boolean"
            ]
          }
        },
        "statement" : {
          "description" : "The statement to evaluate.",
          "$ref" : "#/$defs/expressionOrStatement"
        },
        "expression" : {
          "description" : "The expression to evaluate.",
          "$ref" : "#/$defs/expressionOrStatement"
        },
        "exception" : {
          "description" : "Expected exception message",
          "oneOf" : [
            {
              "type" : "string"
            },
            {
              "type" : "object",
              "required" : [
                "types"
              ],
              "properties" : {
                "message" : {
                  "type" : "string"
                },
                "types" : {
                  "type" : "object",
                  "propertyNames" : {
                    "$ref" : "#/$defs/supportedLanguage"
                  },
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          ]
        },
        "files" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/$defs/file"
          }
        },
        "return" : {
          "description" : "Expected return value"
        },
        "return_raw" : {
          "description" : "Value string to parse to the expected return value",
          "$ref" : "#/$defs/advancedValueOutputChannel"
        },
        "stderr" : {
          "description" : "Expected output at stderr",
          "$ref" : "#/$defs/textOutputChannel"
        },
        "stdout" : {
          "description" : "Expected output at stdout",
          "$ref" : "#/$defs/textOutputChannel"
        },
        "config" : {
          "$ref" : "#/$defs/globalConfig",
          "description" : "Configuration settings at testcase level"
        },
        "exit_code" : {
          "type" : "integer",
          "description" : "Expected exit code for the run"
        }
      }
    },
    "textOutputChannel" : {
      "anyOf" : [
        {
          "description" : "A simple value which is converted into a string.",
          "type" : [
            "string",
            "number",
            "integer",
            "boolean"
          ]
        },
        {
          "$ref" : "#/$defs/advancedTextOutputChannel"
        }
      ]
    },
    "expressionOrStatement" : {
      "oneOf" : [
        {
          "type" : "string"
        },
        {
          "type" : "object",
          "propertyNames" : {
            "$ref" : "#/$defs/supportedLanguage"
          },
          "items" : {
            "type" : "string",
            "description" : "A language-specific literal which will be used verbatim."
          }
        }
      ]
    },
    "advancedTextOutputChannel" : {
      "type" : "object",
      "unevaluatedProperties" : false,
      "description" : "Advanced output for a text output channel, such as stdout or stderr.",
      "required" : [
        "data"
      ],
      "properties" : {
        "data" : {
          "description" : "The expected data types.",
          "type" : [
            "string",
            "number",
            "integer",
            "boolean"
          ]
        },
        "config" : {
          "$ref" : "#/$defs/textConfigurationOptions"
        }
      },
      "oneOf" : [
        {
          "properties" : {
            "oracle" : {
              "type" : "string",
              "enum" : [
                "builtin"
              ]
            }
          }
        },
        {
          "required" : [
            "oracle",
            "language",
            "file"
          ],
          "properties" : {
            "oracle" : {
              "type" : "string",
              "enum" : [
                "custom_check"
              ]
            },
            "language" : {
              "type" : "string",
              "description" : "The programming language of the custom check function."
            },
            "file" : {
              "type" : "string",
              "description" : "The path to the file containing the custom check function."
            },
            "name" : {
              "type" : "string",
              "description" : "The name of the custom check function.",
              "default" : "evaluate"
            },
            "arguments" : {
              "type" : "array",
              "description" : "List of 'Python' values to use as arguments to the function.",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      ]
    },
    "advancedValueOutputChannel" : {
      "oneOf" : [
        {
          "type" : "string",
          "description" : "A 'Python' value to parse and use as the expected type."
        },
        {
          "type" : "object",
          "unevaluatedProperties" : false,
          "description" : "A custom check function.",
          "required" : [
            "value"
          ],
          "properties" : {
            "value" : {
              "type" : "string",
              "description" : "The expected value."
            }
          },
          "oneOf" : [
            {
              "properties" : {
                "oracle" : {
                  "type" : "string",
                  "enum" : [
                    "builtin"
                  ]
                }
              }
            },
            {
              "required" : [
                "oracle",
                "language",
                "file"
              ],
              "properties" : {
                "oracle" : {
                  "type" : "string",
                  "enum" : [
                    "custom_check"
                  ]
                },
                "language" : {
                  "type" : "string",
                  "description" : "The programming language of the custom check function."
                },
                "file" : {
                  "type" : "string",
                  "description" : "The path to the file containing the custom check function."
                },
                "name" : {
                  "type" : "string",
                  "description" : "The name of the custom check function.",
                  "default" : "evaluate"
                },
                "arguments" : {
                  "type" : "array",
                  "description" : "List of 'Python' values to use as arguments to the function.",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    "textConfigurationOptions" : {
      "type" : "object",
      "description" : "Configuration properties for textual comparison and to configure if the expected value should be hidden or not",
      "minProperties" : 1,
      "unevaluatedProperties" : false,
      "properties" : {
        "applyRounding" : {
          "description" : "Apply rounding when comparing as float",
          "type" : "boolean"
        },
        "caseInsensitive" : {
          "description" : "Ignore case when comparing strings",
          "type" : "boolean"
        },
        "ignoreWhitespace" : {
          "description" : "Ignore leading and trailing whitespace",
          "type" : "boolean"
        },
        "roundTo" : {
          "description" : "The number of decimals to round at, when applying the rounding on floats",
          "type" : "integer"
        },
        "tryFloatingPoint" : {
          "description" : "Try comparing text as floating point numbers",
          "type" : "boolean"
        },
        "hideExpected" : {
          "description" : "Hide the expected value in feedback (default: false), not recommended to use!",
          "type" : "boolean"
        }
      }
    },
    "globalConfig" : {
      "type" : "object",
      "description" : "Global configuration properties",
      "minProperties" : 1,
      "unevaluatedProperties" : false,
      "properties" : {
        "stdout" : {
          "$ref" : "#/$defs/textConfigurationOptions"
        },
        "stderr" : {
          "$ref" : "#/$defs/textConfigurationOptions"
        }
      }
    },
    "file" : {
      "type" : "object",
      "description" : "Path to a file for input.",
      "unevaluatedProperties" : false,
      "required" : [
        "name",
        "url"
      ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "File name"
        },
        "url" : {
          "type" : "string",
          "format" : "uri",
          "description" : "Relative path to the file in the `description` folder of a Dodona exercise"
        }
      }
    },
    "supportedLanguage" : {
      "type" : "string",
      "enum" : [
        "bash",
        "c",
        "haskell",
        "java",
        "javascript",
        "kotlin",
        "python",
        "runhaskell",
        "csharp"
      ]
    }
  }
}
